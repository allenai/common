org.allenai.common.indexing: {

  stoplist: {
    group: "org.allenai.nlp.resources"
    name: "smart_stopwords_2.txt"
    version: 1
  }

}

org.allenai.common.indexing.base: {
  elasticSearch: {
    // Specify the right clustername. It usually defaults to `elasticsearch` but
    // you can verify by using the command:
    // curl -XGET 'http://localhost:9200/_cluster/health?pretty=true'.
    // For Aristo Solvers, the hostIp should be changed to `waterloo.corp.ai2`
    // with clusterName `solvercorpora`.
    clusterName: "elasticsearch"
    hostIp: "127.0.0.1"
    hostPort: 9300
    indexName: "lucene"
  }

  buildIndexOptions: {
    buildFromScratch: true
    dumpFolder: "common/src/main/resources/org/allenai/ari/indexing/dump"
  }
}

org.allenai.common.indexing.sentence_base: ${org.allenai.common.indexing.base} {
  elasticSearch: {
    indexType: "sentence"
    mapping: {
      sentence: {
        dynamic: false,
        properties: {
          text: {
            type: "multi_field",
            fields: {
              text: {type: "string", analyzer: "snowball"}
              text_raw: {type: "string", index: "not_analyzed"},
            }
          }
          source: {
            type: "string",
            index: "not_analyzed"
          }
        }
      }
    }
  }
}

org.allenai.common.indexing.paragraph_base: ${org.allenai.common.indexing.base} {
  elasticSearch: {
    indexType: "paragraph"
    mapping: {
      paragraph: {
        dynamic: false,
        properties: {
          text: {
            type: "multi_field",
            fields: {
              text: {type: "string", analyzer: "snowball"}
              text_raw: {type: "string", index: "not_analyzed"},
            }
          }
          source: {
            type: "string",
            index: "not_analyzed"
          }
        }
      }
    }
  }
}


org.allenai.common.indexing.waterloo: ${org.allenai.common.indexing.sentence_base} {
  elasticSearch.indexName: "waterloo"
  corpora: [
    {
      pathIsLocal: true
      documentFormat: "waterloo"
      directory: "/mnt/wumpus/Waterloo/CorpusSegmented"
    }
  ]
}

org.allenai.common.indexing.waterloofiltered1: ${org.allenai.common.indexing.sentence_base} {
  elasticSearch.indexName: "waterloofiltered1"
  corpora: [
    {
      group: "org.allenai.aristo.corpora.derivative"
      directory:  "WaterlooFiltered"
      version: 2
      file: "waterloo-filtered-0.6-1-confidence.txt"
    }
  ]
}

org.allenai.common.indexing.waterloofiltered2: ${org.allenai.common.indexing.sentence_base} {
  elasticSearch.indexName: "waterloofiltered2"
  corpora: [
    {
      group: "org.allenai.aristo.corpora.derivative"
      directory:  "WaterlooFiltered"
      version: 2
      file: "waterloo-filtered-0.47-0.6-confidence.txt"
    }
  ]
}

org.allenai.common.indexing.simplewikipedia: ${org.allenai.common.indexing.sentence_base} {
  elasticSearch.indexName: "simplewikipedia"
  corpora: [
    {
      group: "org.allenai.corpora.wikipedia"
      version: 1
      file: "SimpleWikipedia-all.txt"
      privacy: "public"
    }
  ]
}

org.allenai.common.indexing.simplewikipedia_paragraph: ${org.allenai.common.indexing.paragraph_base} {
  elasticSearch.indexName: "simplewikipedia-paragraph"
  corpora: [
    {
      documentFormat: "simple wikipedia"
      group: "org.allenai.corpora.wikipedia"
      file: "SimpleWikipedia-all.txt"
      version: 1
      privacy: "public"
    }
  ]
}

org.allenai.common.indexing.wikipedia: ${org.allenai.common.indexing.sentence_base} {
  elasticSearch.indexName: "wikipedia"
  corpora: [
    {
      group: "org.allenai.corpora.wikipedia"
      directory: "Wikipedia-all"
      version: 1
      privacy: "public"
    }
  ]
}

org.allenai.common.indexing.barrons: ${org.allenai.common.indexing.sentence_base} {
  elasticSearch.indexName: "barrons"
  corpora: [
    {
      group: "org.allenai.aristo.corpora.derivative"
      directory:  "Barrons-4thGrade.sentences"
      version: 1
      file: "Barrons.sentences.txt"
    }
  ]
}

org.allenai.common.indexing.websentences: ${org.allenai.common.indexing.sentence_base} {
  elasticSearch.indexName: "websentences"
  corpora: [
    {
      group: "org.allenai.aristo.corpora.source"
      directory: "WebSentences-allSources"
      version: 1
      file:"CurrentWebCorpus-allSources.txt"
    }
  ]
}

org.allenai.common.indexing.ck12biov44: ${org.allenai.common.indexing.sentence_base} {
  elasticSearch.indexName: "ck12biov44"
  corpora: [
    {
      group: "org.allenai.aristo.corpora.derivative"
      directory: "CK-12-Biology-v44.sentences"
      version: 1
      file: "CK-12-Biology_b_v44_fhp.txt.sentences.txt"
    }
  ]
}

org.allenai.common.indexing.barrons_paragraph: ${org.allenai.common.indexing.paragraph_base} {
  elasticSearch.indexName: "barrons-paragraph"
  corpora: [
    {
      documentFormat: "barrons"
      group: "org.allenai.aristo.corpora.source"
      directory:  "Barrons-4th-Grade"
      version: 1
      file: "Barrons.txt"
    }
  ]
}

